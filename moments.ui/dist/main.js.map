{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/angular-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/can-activate-route.guard.ts","webpack:///./src/app/category-details/category-details.component.css","webpack:///./src/app/category-details/category-details.component.html","webpack:///./src/app/category-details/category-details.component.ts","webpack:///./src/app/category-view/category-view.component.css","webpack:///./src/app/category-view/category-view.component.html","webpack:///./src/app/category-view/category-view.component.ts","webpack:///./src/app/category.ts","webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/config/config.component.html","webpack:///./src/app/config/config.component.ts","webpack:///./src/app/config/config.service.ts","webpack:///./src/app/create-category-opener/create-category-opener.component.css","webpack:///./src/app/create-category-opener/create-category-opener.component.html","webpack:///./src/app/create-category-opener/create-category-opener.component.ts","webpack:///./src/app/create-register-opener/create-register-opener.component.css","webpack:///./src/app/create-register-opener/create-register-opener.component.html","webpack:///./src/app/create-register-opener/create-register-opener.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/http-error-handler.service.ts","webpack:///./src/app/http-interceptors/auth-interceptor.ts","webpack:///./src/app/http-interceptors/caching-interceptor.ts","webpack:///./src/app/http-interceptors/ensure-https-interceptor.ts","webpack:///./src/app/http-interceptors/index.ts","webpack:///./src/app/http-interceptors/logging-interceptor.ts","webpack:///./src/app/http-interceptors/noop-interceptor.ts","webpack:///./src/app/http-interceptors/trim-name-interceptor.ts","webpack:///./src/app/http-interceptors/upload-interceptor.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu-list-category/menu-list-category.component.css","webpack:///./src/app/menu-list-category/menu-list-category.component.html","webpack:///./src/app/menu-list-category/menu-list-category.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/moment-search/moment-search.component.css","webpack:///./src/app/moment-search/moment-search.component.html","webpack:///./src/app/moment-search/moment-search.component.ts","webpack:///./src/app/moment.ts","webpack:///./src/app/nasa/nasa.component.css","webpack:///./src/app/nasa/nasa.component.html","webpack:///./src/app/nasa/nasa.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/request-cache.service.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/category.service.ts","webpack:///./src/app/services/moment-search.service.ts","webpack:///./src/app/services/nasa.service.ts","webpack:///./src/app/services/router.service.ts","webpack:///./src/app/services/userprofile.service.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport {\r\n   MatButtonModule,\r\n   MatToolbarModule,\r\n   MatIconModule,\r\n   MatBadgeModule,\r\n   MatSidenavModule,\r\n   MatListModule,\r\n   MatGridListModule,\r\n   MatFormFieldModule,\r\n   MatInputModule,\r\n   MatSelectModule,\r\n   MatRadioModule,\r\n   MatDatepickerModule,\r\n   MatNativeDateModule,\r\n   MatChipsModule,\r\n   MatTooltipModule,\r\n   MatTableModule,\r\n   MatPaginatorModule,\r\n   MatCardModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n   imports: [\r\n      CommonModule,\r\n      MatButtonModule,\r\n      MatToolbarModule,\r\n      MatIconModule,\r\n      MatSidenavModule,\r\n      MatBadgeModule,\r\n      MatListModule,\r\n      MatGridListModule,\r\n      MatFormFieldModule,\r\n      MatInputModule,\r\n      MatSelectModule,\r\n      MatRadioModule,\r\n      MatDatepickerModule,\r\n      MatNativeDateModule,\r\n      MatChipsModule,\r\n      MatTooltipModule,\r\n      MatTableModule,\r\n      MatPaginatorModule,\r\n      MatCardModule\r\n   ],\r\n   exports: [\r\n      MatButtonModule,\r\n      MatToolbarModule,\r\n      MatIconModule,\r\n      MatSidenavModule,\r\n      MatBadgeModule,\r\n      MatListModule,\r\n      MatGridListModule,\r\n      MatInputModule,\r\n      MatFormFieldModule,\r\n      MatSelectModule,\r\n      MatRadioModule,\r\n      MatDatepickerModule,\r\n      MatChipsModule,\r\n      MatTooltipModule,\r\n      MatTableModule,\r\n      MatPaginatorModule,\r\n      MatCardModule\r\n   ],\r\n   providers: [\r\n      MatDatepickerModule,\r\n   ]\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { CreateRegisterOpenerComponent } from './create-register-opener/create-register-opener.component';\r\nimport { CreateCategoryOpenerComponent } from './create-category-opener/create-category-opener.component';\r\nimport { CategoryDetailsComponent } from './category-details/category-details.component';\r\nimport { CategoryViewComponent } from './category-view/category-view.component';\r\nimport { MomentSearchComponent } from './moment-search/moment-search.component';\r\nimport { CanActivateRouteGuard } from './can-activate-route.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    children: [\r\n      {\r\n        path: 'user/:userId/edit',\r\n        component: CreateRegisterOpenerComponent, outlet: `userEditOutlet`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'category',\r\n    children: [\r\n      {\r\n        path: 'category/:categoryId',\r\n        component: CreateCategoryOpenerComponent, outlet: `categoryEditOutlet`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'categorydetails',\r\n    component: CategoryDetailsComponent\r\n  },\r\n  {\r\n    path: 'category/:categoryId',\r\n    component: CategoryViewComponent\r\n  },\r\n  {\r\n    path: 'moments',\r\n    component: MomentSearchComponent,\r\n    canActivate: [CanActivateRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [CanActivateRouteGuard]\r\n})\r\n\r\nexport class AppRoutingModule { }","module.exports = \"<app-header></app-header>\\r\\n<!-- <app-moment-search></app-moment-search> -->\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClientXsrfModule } from '@angular/common/http';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\n/* Routing */\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { RequestCache, RequestCacheWithMap } from './request-cache.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AuthService } from './auth.service';\r\nimport { ConfigComponent } from './config/config.component';\r\n\r\nimport { NasaComponent } from './nasa/nasa.component';\r\nimport { HttpErrorHandler } from './http-error-handler.service';\r\nimport { MessageService } from './message.service';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MomentSearchComponent } from './moment-search/moment-search.component';\r\n\r\nimport { httpInterceptorProviders } from './http-interceptors/index';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { CreateRegisterOpenerComponent } from './create-register-opener/create-register-opener.component';\r\nimport { CreateCategoryOpenerComponent } from './create-category-opener/create-category-opener.component';\r\nimport { CategoryDetailsComponent } from './category-details/category-details.component';\r\nimport { MenuListCategoryComponent } from './menu-list-category/menu-list-category.component';\r\nimport { CategoryViewComponent } from './category-view/category-view.component';\r\nimport { RouterService } from './services/router.service';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { NasaService } from './services/nasa.service';\r\nimport { UserprofileService } from './services/userprofile.service';\r\nimport { CategoryService } from './services/category.service';\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    // import HttpClientModule after BrowserModule.\r\n    HttpClientModule,\r\n    HttpClientXsrfModule.withOptions({\r\n      cookieName: 'My-Xsrf-Cookie',\r\n      headerName: 'My-Xsrf-Header',\r\n    }),\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    FlexLayoutModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    ConfigComponent,\r\n    CategoryComponent,\r\n    NasaComponent,\r\n    MessagesComponent,\r\n    CreateRegisterOpenerComponent,\r\n    MomentSearchComponent,\r\n    CreateCategoryOpenerComponent,\r\n    LoginComponent,\r\n    CategoryDetailsComponent,\r\n    RegisterComponent,\r\n    MenuListCategoryComponent,\r\n    CategoryViewComponent,\r\n    HeaderComponent,\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    HttpErrorHandler,\r\n    MessageService,\r\n    { provide: RequestCache, useClass: RequestCacheWithMap },\r\n    httpInterceptorProviders,\r\n    RouterService,\r\n    AuthenticationService\r\n    , NasaService\r\n    , UserprofileService\r\n    , CategoryService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    RegisterComponent\r\n    , CategoryComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n/** Mock client-side authentication/authorization service */\r\n@Injectable()\r\nexport class AuthService {\r\n  getAuthorizationToken() {\r\n    return localStorage.getItem(\"JWT_TOKEN\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport {AuthenticationService} from './services/authentication.service';\r\nimport {RouterService} from './services/router.service';\r\n\r\n@Injectable()\r\nexport class CanActivateRouteGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthenticationService, private router: RouterService) {}\r\n\r\n  canActivate(){\r\n    if(!this.authService.isTokenExpired()){\r\n      return true;\r\n    }\r\n    else{\r\n      this.router.routeToLogin();\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","module.exports = \".card {\\r\\n    min-width: 80%;\\r\\n  }\\r\\n  \\r\\n  .example-container {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n    max-height: 500px;\\r\\n    min-width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n  }\\r\\n  \\r\\n  a {\\r\\n    cursor: pointer;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2F0ZWdvcnktZGV0YWlscy9jYXRlZ29yeS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0VBQ2hCOztFQUVBO0lBQ0Usb0JBQWE7SUFBYixhQUFhO0lBQ2IsNEJBQXNCO0lBQXRCLDZCQUFzQjtZQUF0QixzQkFBc0I7SUFDdEIsaUJBQWlCO0lBQ2pCLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsZUFBZTtFQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5LWRldGFpbHMvY2F0ZWdvcnktZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgbWluLXdpZHRoOiA4MCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1heC1oZWlnaHQ6IDUwMHB4O1xyXG4gICAgbWluLXdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAubWF0LXRhYmxlIHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgbWF4LWhlaWdodDogNTAwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGEge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH0iXX0= */\"","module.exports = \"<div>\\r\\n    <br>\\r\\n      <div class=\\\"container\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayout.gt-md=\\\"row\\\"  fxLayoutAlign=\\\"space-around center\\\" class=\\\"content\\\">\\r\\n                <div class=\\\"blocks\\\">\\r\\n                    <button button=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"OpenCategoryView(0)\\\">\\r\\n                        <mat-icon>add</mat-icon> Add Category\\r\\n                    </button>\\r\\n                </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"container\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"content\\\">\\r\\n          <mat-card class=\\\"card\\\" >\\r\\n            <mat-card-title fxLayout.gt-xs=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n              <h3>Categories</h3>\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n                <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n                    <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n                    <ng-container matColumnDef=\\\"id\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef> Id </mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </mat-cell>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"description\\\">\\r\\n                      <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\\r\\n                      <mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </mat-cell>\\r\\n                    </ng-container>\\r\\n                      <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n                      </ng-container>\\r\\n                       <ng-container matColumnDef=\\\"createby\\\">\\r\\n                          <mat-header-cell *matHeaderCellDef> Create By </mat-header-cell>\\r\\n                          <mat-cell *matCellDef=\\\"let element\\\"> {{element.createby }} </mat-cell>\\r\\n                        </ng-container>\\r\\n                      <ng-container matColumnDef=\\\"creationdate\\\">\\r\\n                          <mat-header-cell *matHeaderCellDef> Creation Date </mat-header-cell>\\r\\n                          <mat-cell *matCellDef=\\\"let element\\\"> {{element.creationdate}} </mat-cell>\\r\\n                        </ng-container>\\r\\n                      <ng-container matColumnDef=\\\"edit\\\">\\r\\n                          <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n                          <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <a\\r\\n                              (click)=\\\"OpenCategoryView(element.id)\\\"\\r\\n                                type=\\\"button\\\">\\r\\n                              <mat-icon class=\\\"icon\\\">edit</mat-icon>\\r\\n                            </a> \\r\\n                          </mat-cell>\\r\\n                        </ng-container> \\r\\n                      <ng-container matColumnDef=\\\"delete\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                          <a (click)=\\\"deleteCategory(element.id)\\\"\\r\\n                              type=\\\"button\\\">\\r\\n                            <mat-icon class=\\\"icon\\\">delete</mat-icon>\\r\\n                          </a> \\r\\n                        </mat-cell>\\r\\n                      </ng-container>   \\r\\n                      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n                    </mat-table>\\r\\n                  </div> \\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <router-outlet name=\\\"reminderEditOutlet\\\"></router-outlet>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { RouterService } from '../services/router.service';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { Category } from '../category';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-category-details',\r\n  templateUrl: './category-details.component.html',\r\n  styleUrls: ['./category-details.component.css']\r\n})\r\nexport class CategoryDetailsComponent implements OnInit {\r\n  status: boolean;\r\n  subscription: Subscription;\r\n  @Input() category: Category;\r\n\r\n  constructor(private routerService: RouterService\r\n    , private categoryService: CategoryService\r\n    , private _authService: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this._authService.authNavStatus$.subscribe(status => this.status = status);\r\n    this.categoryService.fetchCategoriesFromServer();\r\n  }\r\n\r\n  displayedColumns = ['description', 'name', 'createby', 'creationdate', 'edit', 'delete'];\r\n  dataSource = new CategoryDataSource(this.categoryService);\r\n\r\n  OpenCategoryView(categoryId) {\r\n    this.routerService.routeToCategoryView(categoryId);\r\n  }\r\n\r\n  deleteCategory(categoryId) {\r\n    if (this.status) {\r\n      this.categoryService.deleteCategory(categoryId);\r\n      this.dataSource = new CategoryDataSource(this.categoryService);\r\n    } else {\r\n      //alert('Login in Before');\r\n    }\r\n  }\r\n}\r\nexport class CategoryDataSource extends DataSource<any> {\r\n  constructor(private dataService: CategoryService) {\r\n    super();\r\n  }\r\n\r\n  connect(): Observable<Category[]> {\r\n    return this.dataService.getCategories();\r\n  }\r\n\r\n  disconnect() {\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5LXZpZXcvY2F0ZWdvcnktdmlldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"keep-c-list-container\\\">\\r\\n  <app-nasa [moment]=\\\"moment\\\" *ngFor=\\\"let moment of categoryMoments\\\">\\r\\n  </app-nasa>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NasaService } from '../services/nasa.service';\r\nimport { Moment } from '../moment';\r\n\r\n@Component({\r\n  selector: 'app-category-view',\r\n  templateUrl: './category-view.component.html',\r\n  styleUrls: ['./category-view.component.css']\r\n})\r\nexport class CategoryViewComponent implements OnInit {\r\n  categoryId: Number = 0;\r\n  categoryMoments: Array<Moment>;\r\n  constructor(private activateRoute\r\n    : ActivatedRoute,\r\n    private nasaService: NasaService) {\r\n    this.categoryId =\r\n      +this.activateRoute.snapshot.paramMap.get('categoryId');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.nasaService.getMoments().subscribe(\r\n      data => {\r\n        this.categoryMoments = data.filter(moment => this.categoryId === moment.category.id);\r\n      },\r\n      error => {\r\n        if (404 === error.status) {\r\n          console.log(error.message);\r\n        } else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","export class Category {\r\n  id: Number;\r\n  name: string;\r\n  description: string;\r\n  createdBy: string;\r\n  creationDate: Date;\r\n\r\n  constructor() {\r\n    this.name = '';\r\n    this.description = '';\r\n    this.creationDate = new Date();\r\n  }\r\n}","module.exports = \".keep-category-form{\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n  }\\r\\n  .keep-category-wrapper{\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: end;\\r\\n            justify-content: flex-end;\\r\\n  } \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2F0ZWdvcnkvY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLDRCQUFzQjtJQUF0Qiw2QkFBc0I7WUFBdEIsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxvQkFBYTtJQUFiLGFBQWE7SUFDYixxQkFBeUI7WUFBekIseUJBQXlCO0VBQzNCIiwiZmlsZSI6InNyYy9hcHAvY2F0ZWdvcnkvY2F0ZWdvcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5rZWVwLWNhdGVnb3J5LWZvcm17XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgLmtlZXAtY2F0ZWdvcnktd3JhcHBlcntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gIH0gIl19 */\"","module.exports = \"<!-- Label to display any error messages -->\\r\\n<label class=\\\"error-message\\\">{{ errMessage }}</label>\\r\\n\\r\\n<div class=\\\"keep-category-form\\\">\\r\\n<mat-form-field> \\r\\n  <input [(ngModel)]=\\\"category.description\\\" name=\\\"editDescription\\\" matInput placeholder=\\\"Description\\\" type=\\\"text\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  <input [(ngModel)]=\\\"category.name\\\" name=\\\"editName\\\" matInput placeholder=\\\"Name\\\" type=\\\"text\\\">\\r\\n</mat-form-field>\\r\\n</div>\\r\\n<div class=\\\"keep-category-wrapper\\\">\\r\\n  <button mat-button (click)=\\\"onSave()\\\">Save</button>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { Category } from '../category';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n\r\n  category: Category;//= new Category();\r\n  errMessage: string;\r\n  constructor(private dialogRef: MatDialogRef<CategoryComponent>, @Inject(MAT_DIALOG_DATA)\r\n  private data: any\r\n    , private categoryService: CategoryService) {\r\n    if (this.data.categoryId != 0) {\r\n      this.category = this.categoryService.getCategoryById(this.data.categoryId);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  onSave() {\r\n    this.category.createdBy = \"FrontEnd\";\r\n    this.category.creationDate = new Date();\r\n    if (this.data.categoryId == 0) {\r\n      this.categoryService.addCategory(this.category).subscribe(editCategory => {\r\n        this.dialogRef.close();\r\n      },\r\n        error => {\r\n          if (404 === error.status) {\r\n            this.errMessage = error.message;\r\n          } else {\r\n            this.errMessage = error.message;\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this.categoryService.editCategory(this.category).subscribe(editCategory => {\r\n        this.dialogRef.close();\r\n      },\r\n        error => {\r\n          if (404 === error.status) {\r\n            this.errMessage = error.message;\r\n          } else {\r\n            this.errMessage = error.message;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<h3>Get configuration from JSON file</h3>\\r\\n<div>\\r\\n  <button (click)=\\\"clear(); showConfig()\\\">get</button>\\r\\n  <button (click)=\\\"clear(); showConfigResponse()\\\">getResponse</button>\\r\\n  <button (click)=\\\"clear()\\\">clear</button>\\r\\n  <button (click)=\\\"clear(); makeError()\\\">error</button>\\r\\n  <span *ngIf=\\\"config\\\">\\r\\n    <p>Heroes API URL is \\\"{{config.heroesUrl}}\\\"</p>\\r\\n    <p>Textfile URL is \\\"{{config.textfile}}\\\"</p>\\r\\n    <div *ngIf=\\\"headers\\\">\\r\\n      Response headers:\\r\\n      <ul>\\r\\n        <li *ngFor=\\\"let header of headers\\\">{{header}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </span>\\r\\n</div>\\r\\n<p *ngIf=\\\"error\\\" class=\\\"error\\\">{{error | json}}</p>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright Google LLC. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component } from '@angular/core';\r\nimport { Config, ConfigService } from './config.service';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n  selector: 'app-config',\r\n  templateUrl: './config.component.html',\r\n  providers: [ ConfigService ],\r\n  styles: ['.error {color: red;}']\r\n})\r\nexport class ConfigComponent {\r\n  error: any;\r\n  headers: string[];\r\n  config: Config;\r\n\r\n  constructor(private configService: ConfigService) {}\r\n\r\n  clear() {\r\n    this.config = undefined;\r\n    this.error = undefined;\r\n    this.headers = undefined;\r\n  }\r\n\r\n  showConfig() {\r\n    this.configService.getConfig()\r\n      .subscribe(\r\n        (data: Config) => this.config = { ...data }, // success path\r\n        error => this.error = error // error path\r\n      );\r\n  }\r\n\r\n  showConfig_v1() {\r\n    this.configService.getConfig_1()\r\n      .subscribe((data: Config) => this.config = {\r\n          heroesUrl: data['heroesUrl'],\r\n          textfile:  data['textfile']\r\n      });\r\n  }\r\n\r\n  showConfig_v2() {\r\n    this.configService.getConfig()\r\n      // clone the data object, using its known Config shape\r\n      .subscribe((data: Config) => this.config = { ...data });\r\n  }\r\n\r\n  showConfigResponse() {\r\n    this.configService.getConfigResponse()\r\n      // resp is of type `HttpResponse<Config>`\r\n      .subscribe(resp => {\r\n        // display its headers\r\n        const keys = resp.headers.keys();\r\n        this.headers = keys.map(key =>\r\n          `${key}: ${resp.headers.get(key)}`);\r\n\r\n        // access the body directly, which is typed as `Config`.\r\n        this.config = { ... resp.body };\r\n      });\r\n  }\r\n  makeError() {\r\n    this.configService.makeIntentionalError().subscribe(null, error => this.error = error );\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nexport interface Config {\r\n  heroesUrl: string;\r\n  textfile: string;\r\n}\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  configUrl = 'assets/config.json';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getConfig() {\r\n    return this.http.get<Config>(this.configUrl)\r\n      .pipe(\r\n        retry(3), // retry a failed request up to 3 times\r\n        catchError(this.handleError) // then handle the error\r\n      );\r\n  }\r\n\r\n  getConfig_1() {\r\n    return this.http.get(this.configUrl);\r\n  }\r\n\r\n  getConfig_2() {\r\n    // now returns an Observable of Config\r\n    return this.http.get<Config>(this.configUrl);\r\n  }\r\n\r\n  getConfig_3() {\r\n    return this.http.get<Config>(this.configUrl)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getConfigResponse(): Observable<HttpResponse<Config>> {\r\n    return this.http.get<Config>(\r\n      this.configUrl, { observe: 'response' });\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n\r\n  makeIntentionalError() {\r\n    return this.http.get('not/a/real/url')\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1jYXRlZ29yeS1vcGVuZXIvY3JlYXRlLWNhdGVnb3J5LW9wZW5lci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  create-category-opener works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { CategoryComponent } from '../category/category.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RouterService } from '../services/router.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-category-opener',\r\n  templateUrl: './create-category-opener.component.html',\r\n  styleUrls: ['./create-category-opener.component.css']\r\n})\r\nexport class CreateCategoryOpenerComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog, private activateRoute\r\n    : ActivatedRoute,\r\n        private routerService: RouterService) {\r\n          const categoryId =\r\n          +this.activateRoute.snapshot.paramMap.get('categoryId');\r\n        this.dialog\r\n        .open(CategoryComponent, {\r\n          data: {\r\n            categoryId : categoryId\r\n          }\r\n        }).afterClosed()\r\n        .subscribe(result => {\r\n          this.routerService.routeBack();\r\n        });\r\n        }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1yZWdpc3Rlci1vcGVuZXIvY3JlYXRlLXJlZ2lzdGVyLW9wZW5lci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  create-register-opener works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RouterService } from '../services/router.service';\r\n\r\n@Component({\r\n  selector: 'app-create-register-opener',\r\n  templateUrl: './create-register-opener.component.html',\r\n  styleUrls: ['./create-register-opener.component.css']\r\n})\r\nexport class CreateRegisterOpenerComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog, private activateRoute\r\n    : ActivatedRoute,\r\n        private routerService: RouterService) {\r\n        const userId =  this.activateRoute.snapshot.paramMap.get('userId');\r\n        this.dialog.open(RegisterComponent, {\r\n          data: {\r\n            userId : userId\r\n          }\r\n        }).afterClosed().subscribe(result => {\r\n          this.routerService.routeBack();\r\n        });\r\n        }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\r\\n    height: 100%;\\r\\n  }\\r\\n  \\r\\n  mat-sidenav {\\r\\n    width: 250px;\\r\\n  }\\r\\n  \\r\\n  a {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  a:hover,\\r\\n  a:active {\\r\\n    color: lightgray;\\r\\n  }\\r\\n  \\r\\n  .navigation-items {\\r\\n    list-style: none;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .icon {\\r\\n    display: inline-block;\\r\\n    height: 30px;\\r\\n    margin: 0 auto;\\r\\n    padding-right: 5px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    width: 15%;\\r\\n  }\\r\\n  \\r\\n  .label {\\r\\n    display: inline-block;\\r\\n    line-height: 30px;\\r\\n    margin: 0;\\r\\n    width: 85%;\\r\\n  }\\r\\n  \\r\\n  .example-container {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtFQUNkOztFQUVBO0lBQ0UsWUFBWTtFQUNkOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFlBQVk7RUFDZDs7RUFFQTs7SUFFRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsVUFBVTtJQUNWLFNBQVM7SUFDVCxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsVUFBVTtFQUNaOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixTQUFTO0lBQ1QsVUFBVTtFQUNaOztFQUNBO0lBQ0Usb0JBQWE7SUFBYixhQUFhO0lBQ2IsNEJBQXNCO0lBQXRCLDZCQUFzQjtZQUF0QixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixTQUFTO0lBQ1QsT0FBTztJQUNQLFFBQVE7RUFDViIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1zaWRlbmF2LWNvbnRhaW5lciwgbWF0LXNpZGVuYXYtY29udGVudCwgbWF0LXNpZGVuYXYge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICBcclxuICBtYXQtc2lkZW5hdiB7XHJcbiAgICB3aWR0aDogMjUwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGEge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICBhOmhvdmVyLFxyXG4gIGE6YWN0aXZlIHtcclxuICAgIGNvbG9yOiBsaWdodGdyYXk7XHJcbiAgfVxyXG4gIFxyXG4gIC5uYXZpZ2F0aW9uLWl0ZW1zIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAuaWNvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB3aWR0aDogMTUlO1xyXG4gIH1cclxuICBcclxuICAubGFiZWwge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICB3aWR0aDogODUlO1xyXG4gIH1cclxuICAuZXhhbXBsZS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgfSJdfQ== */\"","module.exports = \"<!-- Toolbar -->\\r\\n<div class=\\\"example-container\\\">\\r\\n\\t<mat-toolbar color=\\\"primary\\\">\\r\\n\\t\\t<div *ngIf=\\\"status\\\">\\r\\n\\t\\t\\t<button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n\\t\\t\\t\\t<mat-icon>menu</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<a routerLink=\\\"/\\\">\\r\\n\\t\\t\\t\\tMoments\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\" fxHide.xs>\\r\\n\\t\\t\\t<ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\r\\n\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"!status\\\" (click)=\\\"OpenRegisterView()\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"icon\\\">input</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"label\\\">Register</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"!status\\\" (click)=\\\"login()\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"icon\\\">input</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"label\\\">Login</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t<a (click)=\\\"dashboard()\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"label\\\">Dashboard</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t<a *ngIf=\\\"status\\\" (click)=\\\"logout()\\\" type=\\\"button\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"icon\\\">input</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"label\\\">LogOut</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t</mat-toolbar>\\r\\n\\t<mat-sidenav-container>\\r\\n\\t\\t<mat-sidenav-content>\\r\\n\\r\\n\\t\\t\\t<main>\\r\\n\\t\\t\\t\\t<router-outlet></router-outlet>\\r\\n\\t\\t\\t\\t<router-outlet name=\\\"categoryEditOutlet\\\"></router-outlet>\\r\\n\\r\\n\\t\\t\\t</main>\\r\\n\\t\\t</mat-sidenav-content>\\r\\n\\t\\t<mat-sidenav #sidenav [mode]=\\\"side\\\" fixedTopGap=\\\"56\\\">\\r\\n\\t\\t\\t<mat-nav-list>\\r\\n\\t\\t\\t\\t<a mat-list-item routerLink=\\\"moments\\\">NASA Image Library</a>\\r\\n\\t\\t\\t\\t<a mat-list-item routerLink=\\\"categorydetails\\\">Categories</a>\\r\\n\\t\\t\\t\\t<app-menu-list-category *ngFor=\\\"let category of navCategory\\\" [category]=\\\"category\\\">\\r\\n\\t\\t\\t\\t</app-menu-list-category>\\r\\n\\t\\t\\t\\t<!-- <a mat-list-item routerLink=\\\".\\\" *ngFor=\\\"let nav of fillerNav\\\">{{nav}}</a> -->\\r\\n\\t\\t\\t</mat-nav-list>\\r\\n\\t\\t</mat-sidenav>\\r\\n\\t</mat-sidenav-container>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { RouterService } from '../services/router.service';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Category } from '../category';\r\nimport { CategoryService } from '../services/category.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  status: boolean;\r\n  subscription: Subscription;\r\n  navCategory: Array<Category>;\r\n\r\n  constructor(private routerService: RouterService\r\n    , private _authService: AuthenticationService\r\n    , private categoryService: CategoryService\r\n            ) {\r\n\r\n    this.categoryService.fetchCategoriesFromServer();\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.subscription = this._authService.authNavStatus$.subscribe(status => this.status = status);\r\n    this.categoryService.getCategories().subscribe(\r\n      data => this.navCategory = data,\r\n      error => {\r\n        if (404 === error.status) {\r\n          console.log(error.message);\r\n        } else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  login() {\r\n    this.routerService.routeToLogin();\r\n  }\r\n  dashboard() {\r\n    this.routerService.routeToDashboard();\r\n  }\r\n  OpenRegisterView() {\r\n    this.routerService.routeToRegisterView('test');\r\n  }\r\n  logout() {\r\n    this._authService.logout();\r\n    this.login();\r\n  }\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component is destroyed\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { MessageService } from './message.service';\r\n\r\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\r\nexport type HandleError =\r\n  <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\r\n\r\n/** Handles HttpClient errors */\r\n@Injectable()\r\nexport class HttpErrorHandler {\r\n  constructor(private messageService: MessageService) { }\r\n\r\n  /** Create curried handleError function that already knows the service name */\r\n  createHandleError = (serviceName = '') => <T>\r\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\r\n\r\n  /**\r\n   * Returns a function that handles Http operation failures.\r\n   * This error handler lets the app continue to run as if no error occurred.\r\n   * @param serviceName = name of the data service that attempted the operation\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  handleError<T> (serviceName = '', operation = 'operation', result = {} as T) {\r\n\r\n    return (error: HttpErrorResponse): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      const message = (error.error instanceof ErrorEvent) ?\r\n        error.error.message :\r\n       `server returned code ${error.status} with body \"${error.error}\"`;\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.messageService.add(`${serviceName}: ${operation} failed: ${message}`);\r\n\r\n      // Let the app keep running by returning a safe result.\r\n      return of( result );\r\n    };\r\n\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs'\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private auth: AuthService) { }\r\n  intercept(req: HttpRequest<any>,\r\n    next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const idToken = localStorage.getItem(\"JWT_TOKEN\");\r\n\r\n    if (idToken) {\r\n      const cloned = req.clone({\r\n        headers: req.headers.set(\"Authorization\", \"Bearer \" + idToken)\r\n      });\r\n      return next.handle(cloned);\r\n    }\r\n    else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n  // intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n  //   // Get the auth token from the service.\r\n  //   const authToken = this.auth.getAuthorizationToken();\r\n\r\n  //   /*\r\n  //   * The verbose way:\r\n  //   // Clone the request and replace the original headers with\r\n  //   // cloned headers, updated with the authorization.\r\n  //   const authReq = req.clone({\r\n  //     headers: req.headers.set('Authorization', authToken)\r\n  //   });\r\n  //   */\r\n  //   // Clone the request and set the new header in one step.\r\n  //   const authReq = req.clone({ setHeaders: { Authorization: authToken } });\r\n\r\n  //   // send cloned request with header to the next handler.\r\n  //   return next.handle(authReq);\r\n  // }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpHeaders, HttpRequest, HttpResponse,\r\n  HttpInterceptor, HttpHandler\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { startWith, tap } from 'rxjs/operators';\r\n\r\nimport { RequestCache } from '../request-cache.service';\r\nimport { searchUrl } from '../services/moment-search.service';\r\n\r\n\r\n/**\r\n * If request is cachable (e.g., package search) and\r\n * response is in cache return the cached response as observable.\r\n * If has 'x-refresh' header that is true,\r\n * then also re-run the package search, using response from next(),\r\n * returning an observable that emits the cached response first.\r\n *\r\n * If not in cache or not cachable,\r\n * pass request through to next()\r\n */\r\n@Injectable()\r\nexport class CachingInterceptor implements HttpInterceptor {\r\n  constructor(private cache: RequestCache) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    // continue if not cachable.\r\n    if (!isCachable(req)) { return next.handle(req); }\r\n\r\n    const cachedResponse = this.cache.get(req);\r\n    // cache-then-refresh\r\n    if (req.headers.get('x-refresh')) {\r\n      const results$ = sendRequest(req, next, this.cache);\r\n      return cachedResponse ?\r\n        results$.pipe(startWith(cachedResponse)) :\r\n        results$;\r\n    }\r\n    // cache-or-fetch\r\n    return cachedResponse ?\r\n      of(cachedResponse) : sendRequest(req, next, this.cache);\r\n  }\r\n}\r\n\r\n\r\n/** Is this request cachable? */\r\nfunction isCachable(req: HttpRequest<any>) {\r\n  // Only GET requests are cachable\r\n  return req.method === 'GET' &&\r\n    // Only npm package search is cachable in this app\r\n    -1 < req.url.indexOf(searchUrl);\r\n}\r\n\r\n/**\r\n * Get server response observable by sending request to `next()`.\r\n * Will add the response to the cache on the way out.\r\n */\r\nfunction sendRequest(\r\n  req: HttpRequest<any>,\r\n  next: HttpHandler,\r\n  cache: RequestCache): Observable<HttpEvent<any>> {\r\n\r\n  // No headers allowed in npm search request\r\n  const noHeaderReq = req.clone({ headers: new HttpHeaders() });\r\n\r\n  return next.handle(noHeaderReq).pipe(\r\n    tap(event => {\r\n      // There may be other events besides the response.\r\n      if (event instanceof HttpResponse) {\r\n        cache.put(req, event); // Update the cache.\r\n      }\r\n    })\r\n  );\r\n}\r\n\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class EnsureHttpsInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // clone request and replace 'http://' with 'https://' at the same time\r\n    const secureReq = req.clone({\r\n      url: req.url.replace('http://', 'http://') //TODO: Change to https\r\n    });\r\n    // send the cloned, \"secure\" request to the next handler.\r\n    return next.handle(secureReq);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from './auth-interceptor';\r\nimport { CachingInterceptor } from './caching-interceptor';\r\nimport { EnsureHttpsInterceptor } from './ensure-https-interceptor';\r\nimport { LoggingInterceptor } from './logging-interceptor';\r\nimport { NoopInterceptor } from './noop-interceptor';\r\nimport { TrimNameInterceptor } from './trim-name-interceptor';\r\nimport { UploadInterceptor } from './upload-interceptor';\r\n\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: NoopInterceptor, multi: true },\r\n\r\n  { provide: HTTP_INTERCEPTORS, useClass: EnsureHttpsInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: TrimNameInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: UploadInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true },\r\n\r\n];\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler,\r\n  HttpRequest, HttpResponse\r\n} from '@angular/common/http';\r\n\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Injectable()\r\nexport class LoggingInterceptor implements HttpInterceptor {\r\n  constructor(private messenger: MessageService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const started = Date.now();\r\n    let ok: string;\r\n\r\n    // extend server response observable with logging\r\n    return next.handle(req)\r\n      .pipe(\r\n        tap(\r\n          // Succeeds when there is a response; ignore other events\r\n          event => ok = event instanceof HttpResponse ? 'succeeded' : '',\r\n          // Operation failed; error is an HttpErrorResponse\r\n          error => ok = 'failed'\r\n        ),\r\n        // Log when response observable either completes or errors\r\n        finalize(() => {\r\n          const elapsed = Date.now() - started;\r\n          const msg = `${req.method} \"${req.urlWithParams}\"\r\n             ${ok} in ${elapsed} ms.`;\r\n          this.messenger.add(msg);\r\n        })\r\n      );\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class NoopInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n    return next.handle(req);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TrimNameInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const body = req.body;\r\n    if (!body || !body.name ) {\r\n      return next.handle(req);\r\n    }\r\n    // copy the body and trim whitespace from the name property\r\n    const newBody = { ...body, name: body.name.trim() };\r\n    // clone request and set its body\r\n    const newReq = req.clone({ body: newBody });\r\n    // send the cloned request to the next handler.\r\n    return next.handle(newReq);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler,\r\n  HttpRequest, HttpResponse,\r\n  HttpEventType, HttpProgressEvent\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Simulate server replying to file upload request */\r\n@Injectable()\r\nexport class UploadInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.indexOf('/upload/file') === -1) {\r\n      return next.handle(req);\r\n    }\r\n    const delay = 300; // TODO: inject delay?\r\n    return createUploadEvents(delay);\r\n  }\r\n}\r\n\r\n/** Create simulation of upload event stream */\r\nfunction createUploadEvents(delay: number) {\r\n  // Simulate XHR behavior which would provide this information in a ProgressEvent\r\n  const chunks = 5;\r\n  const total = 12345678;\r\n  const chunkSize = Math.ceil(total / chunks);\r\n\r\n  return new Observable<HttpEvent<any>>(observer => {\r\n    // notify the event stream that the request was sent.\r\n    observer.next({type: HttpEventType.Sent});\r\n\r\n    uploadLoop(0);\r\n\r\n    function uploadLoop(loaded: number) {\r\n      // N.B.: Cannot use setInterval or rxjs delay (which uses setInterval)\r\n      // because e2e test won't complete. A zone thing?\r\n      // Use setTimeout and tail recursion instead.\r\n        setTimeout(() => {\r\n          loaded += chunkSize;\r\n\r\n          if (loaded >= total) {\r\n            const doneResponse = new HttpResponse({\r\n              status: 201, // OK but no body;\r\n            });\r\n            observer.next(doneResponse);\r\n            observer.complete();\r\n            return;\r\n          }\r\n\r\n          const progressEvent: HttpProgressEvent = {\r\n            type: HttpEventType.UploadProgress,\r\n            loaded,\r\n            total\r\n          };\r\n          observer.next(progressEvent);\r\n          uploadLoop(loaded);\r\n        }, delay);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \".login-c-form-wrapper{\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n    padding: 1em;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;height: 70vh;\\r\\n    }\\r\\n    .divcls{\\r\\n    margin: 0.5em;\\r\\n    }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLDRCQUFzQjtJQUF0Qiw2QkFBc0I7WUFBdEIsc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUIsQ0FBQyxZQUFZO0lBQ2hDO0lBQ0E7SUFDQSxhQUFhO0lBQ2IiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWMtZm9ybS13cmFwcGVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nOiAxZW07XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7aGVpZ2h0OiA3MHZoO1xyXG4gICAgfVxyXG4gICAgLmRpdmNsc3tcclxuICAgIG1hcmdpbjogMC41ZW07XHJcbiAgICB9Il19 */\"","module.exports = \"<form [formGroup]=\\\"frmLogin\\\" (submit)=\\\"loginSubmit()\\\" class=\\\"login-c-form-wrapper\\\">\\r\\n    <div class=\\\"divcls\\\">\\r\\n    <label for=\\\"username\\\">UserName</label>\\r\\n    <input class=\\\"userid\\\" matInput [formControl]='userid'> \\r\\n    </div>\\r\\n    <div class=\\\"divcls\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input class=\\\"password\\\" matInput type = 'password' [formControl]='password'> \\r\\n  \\r\\n    </div>\\r\\n    <div class=\\\"divcls\\\">\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"!frmLogin.valid\\\">Submit</button>\\r\\n    <strong *ngIf=\\\"submitMessage\\\" class=\\\"error-message\\\">{{submitMessage}}</strong>\\r\\n    </div>\\r\\n</form>\\r\\n<router-outlet name=\\\"userEditOutlet\\\"></router-outlet>\\r\\n\\r\\n  \"","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { RouterService } from '../services/router.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  public bearerToken: any;\r\n  public submitMessage: string;\r\n  userid = new FormControl('', Validators.required);\r\n  password = new FormControl('', Validators.required);\r\n  //user = new User(this.username.value,this.password.value);\r\n  frmLogin = new FormGroup({\r\n    userid: this.userid,\r\n    password: this.password\r\n  });\r\n  constructor(private _authService: AuthenticationService, public routerService: RouterService) { }\r\n\r\n  loginSubmit() {\r\n    this._authService.authenticateUser(this.frmLogin.value)\r\n      .then(\r\n        res => {\r\n          if (res) {\r\n            //this._authService.setBearerToken(JSON.parse(res).token);\r\n            //this._authService.setUserId(this.frmLogin.value.userid)\r\n            this.routerService.routeToDashboard();\r\n          }\r\n          else {\r\n            this.submitMessage = \"No token found\"\r\n          }\r\n        }\r\n      )\r\n      .catch(this.handleError());;\r\n  }\r\n  private handleError() {\r\n    return (error: any): any => {\r\n      if ((error.status === 404 || error.status === 403)) {\r\n        console.error(error);\r\n        this.log(`Failed: Server Error`);\r\n      }\r\n      return Observable.throw(error);\r\n\r\n    };\r\n  }\r\n  private log(message: string) {\r\n    console.log(`NotesService: ${message}`);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUtbGlzdC1jYXRlZ29yeS9tZW51LWxpc3QtY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a mat-list-item >\\r\\n  <li  (click)=\\\"routeToCategoryListView(category.id)\\\">{{category.name}}</li>\\r\\n  </a>\\r\\n\"","import { Component,HostBinding, Input, OnInit } from '@angular/core';\r\nimport { Category} from '../category'\r\nimport { RouterService } from '../services/router.service';\r\n\r\n@Component({\r\n  selector: 'app-menu-list-category',\r\n  templateUrl: './menu-list-category.component.html',\r\n  styleUrls: ['./menu-list-category.component.css']\r\n})\r\nexport class MenuListCategoryComponent implements OnInit {\r\n  @Input() category: Category;\r\n\r\n  constructor(private routerService: RouterService) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  routeToCategoryListView(categoryId){\r\n    this.routerService.routeToCategoryListView(categoryId);     \r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\r\\n  <h3>Messages</h3>\\r\\n  <button class=\\\"clear\\\" (click)=\\\"messageService.clear()\\\">clear</button>\\r\\n  <br>\\r\\n  <ol>\\r\\n    <li *ngFor='let message of messageService.messages'> {{message}} </li>\\r\\n  </ol>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright Google LLC. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component } from '@angular/core';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html'\r\n})\r\nexport class MessagesComponent {\r\n  constructor(public messageService: MessageService) {}\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \".example-card {\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n  background-image: url('https://images-assets.nasa.gov/image/PIA01492/PIA01492~orig.jpg');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n#leftbox { \\r\\n  float:left;  \\r\\n  background:Red; \\r\\n  width:25%; \\r\\n  height:280px; \\r\\n}\\r\\n\\r\\n#rightbox{ \\r\\n  float:right; \\r\\n  background:blue; \\r\\n  width:25%; \\r\\n  height:280px; \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9tZW50LXNlYXJjaC9tb21lbnQtc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx3RkFBd0Y7RUFDeEYsc0JBQXNCO0FBQ3hCOztBQUNBO0VBQ0UsVUFBVTtFQUNWLGNBQWM7RUFDZCxTQUFTO0VBQ1QsWUFBWTtBQUNkOztBQUNBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixTQUFTO0VBQ1QsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvbW9tZW50LXNlYXJjaC9tb21lbnQtc2VhcmNoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL1BJQTAxNDkyL1BJQTAxNDkyfm9yaWcuanBnJyk7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxufVxyXG4jbGVmdGJveCB7IFxyXG4gIGZsb2F0OmxlZnQ7ICBcclxuICBiYWNrZ3JvdW5kOlJlZDsgXHJcbiAgd2lkdGg6MjUlOyBcclxuICBoZWlnaHQ6MjgwcHg7IFxyXG59IFxyXG4jcmlnaHRib3h7IFxyXG4gIGZsb2F0OnJpZ2h0OyBcclxuICBiYWNrZ3JvdW5kOmJsdWU7IFxyXG4gIHdpZHRoOjI1JTsgXHJcbiAgaGVpZ2h0OjI4MHB4OyBcclxufSJdfQ== */\"","module.exports = \"<h3>Search Moments from NASA</h3>\\r\\n<p><i>Searches when typing stops. Caches for 30 seconds.</i></p>\\r\\n<input (keyup)=\\\"search($event.target.value)\\\" id=\\\"name\\\" placeholder=\\\"Search\\\" />\\r\\n<input type=\\\"checkbox\\\" id=\\\"refresh\\\" [checked]=\\\"withRefresh\\\" (click)=\\\"toggleRefresh()\\\">\\r\\n<label for=\\\"refresh\\\">with refresh</label>\\r\\n\\r\\n<div *ngFor=\\\"let moment of moments$ | async\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n      <mat-card-title>{{moment.nasaid}}</mat-card-title>\\r\\n      <mat-card-subtitle>{{moment.title}}</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <img mat-card-image src={{moment.href}} alt=\\\"{{moment.nasaId}}\\\">\\r\\n    <mat-card-content>\\r\\n      <p>\\r\\n        {{moment.description}}\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <mat-select name=\\\"editCategory\\\" placeholder=\\\"Select category\\\" [(ngModel)]=\\\"moment.category\\\">\\r\\n        <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category\\\">\\r\\n          {{ category.name }}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n      <button mat-button (click)=\\\"add(moment)\\\">ADD</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\nimport { Moment } from '../moment'\r\nimport { MomentSearchService } from '../services/moment-search.service';\r\nimport { NasaService } from '../services/nasa.service';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { Category } from '../category';\r\n\r\n@Component({\r\n  selector: 'app-moment-search',\r\n  templateUrl: './moment-search.component.html',\r\n  providers: [MomentSearchService],\r\n  styleUrls: ['.//moment-search.component.css']\r\n})\r\nexport class MomentSearchComponent implements OnInit {\r\n  withRefresh = false;\r\n  moments$: Observable<Moment[]>;\r\n  private searchText$ = new Subject<string>();\r\n  categories: Array<Category> = [];\r\n\r\n  constructor(private searchService: MomentSearchService\r\n    , private momentsService: NasaService\r\n    , private categoryService: CategoryService) { }\r\n\r\n  search(momentName: string) {\r\n    this.searchText$.next(momentName);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.moments$ = this.searchText$.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(momentName =>\r\n        this.searchService.search(momentName, this.withRefresh))\r\n    );\r\n    this.categoryService.getCategories().subscribe(\r\n      data => this.categories = data,\r\n      error => {\r\n        if (404 === error.status) {\r\n          console.log(error.message);\r\n        } else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n  toggleRefresh() { this.withRefresh = !this.withRefresh; }\r\n  add(nasaMoment: Moment): void {\r\n    nasaMoment.nasaId = nasaMoment.nasaId.trim();\r\n    if (!nasaMoment.nasaId) {\r\n      return;\r\n    }\r\n    //nasaMoment.id = 0;// The server will generate the id for this new moment\r\n    nasaMoment.creationDate = new Date();\r\n    nasaMoment.createdBy = \"Front End\";\r\n    this.momentsService.addMoment(nasaMoment);\r\n  }\r\n}\r\n\r\n","\r\nimport { Category } from \"./category\";\r\n\r\nexport class Moment {\r\n  id: number;\r\n  nasaId: string;\r\n  title: string;\r\n  description: string;\r\n  href: string;\r\n  category: Category;\r\n  createdBy: string;\r\n  creationDate: Date;\r\n\r\n  constructor() {\r\n    this.title = '';\r\n    this.description = '';\r\n    this.href = '';\r\n    this.category = new Category();\r\n  }\r\n}\r\n","module.exports = \".example-card {\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmFzYS9uYXNhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtRkFBbUY7RUFDbkYsc0JBQXNCO0FBQ3hCIiwiZmlsZSI6InNyYy9hcHAvbmFzYS9uYXNhLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2Fzc2V0cy9pbWcvZXhhbXBsZXMvc2hpYmExLmpwZycpO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuIl19 */\"","module.exports = \"<h3>Moments</h3>\\n<div *ngFor=\\\"let moment of moments\\\">\\n  <mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title>{{moment.nasaid}}</mat-card-title>\\n      <mat-card-subtitle>{{moment.title}}</mat-card-subtitle>\\n    </mat-card-header>\\n    <img mat-card-image src={{moment.href}} alt=\\\"Photo of a Shiba Inu\\\">\\n    <mat-card-content>\\n      <p>\\n        {{moment.description}}\\n      </p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-button (click)=\\\"add(moment.nasaid)\\\">ADD</button>\\n      <button mat-button (click)=\\\"edit(moment.nasaid)\\\">EDIT</button>\\n      <button mat-button (click)=\\\"delete(moment.nasaid)\\\">DELETE</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Moment } from '../moment';\nimport { NasaService } from '../services/nasa.service';\n\n@Component({\n  selector: 'app-nasa',\n  templateUrl: './nasa.component.html',\n  providers: [NasaService],\n  styleUrls: ['./nasa.component.css']\n})\nexport class NasaComponent implements OnInit {\n  @Input() moment: Moment;\n  moments: Moment[];\n  editMoment: Moment; // the moment currently being edited\n\n  constructor(private momentsService: NasaService) { }\n\n  ngOnInit() {\n    this.getMoments();\n  }\n\n  getMoments(): void {\n    this.momentsService.getMoments()\n      .subscribe(moments => (this.moments = moments));\n  }\n\n  add(nasaId: string): void {\n    this.editMoment = undefined;\n    nasaId = nasaId.trim();\n    if (!nasaId) {\n      return;\n    }\n\n    // The server will generate the id for this new moment\n    const newMoment: Moment = { nasaId } as Moment;\n    this.momentsService\n      .addMoment(newMoment)\n      .subscribe(moment => this.moments.push(moment));\n  }\n\n\n  edit(moment: Moment) {\n    this.editMoment = moment;\n  }\n\n  update() {\n    if (this.editMoment) {\n      this.momentsService\n        .editMoment(this.editMoment)\n        .subscribe(moment => {\n          // replace the moment in the moments list with update from server\n          const ix = moment ? this.moments.findIndex(h => h.id === moment.id) : -1;\n          if (ix > -1) {\n            this.moments[ix] = moment;\n          }\n        });\n      this.editMoment = undefined;\n    }\n  }\n}\n\n","module.exports = \".keep-user-register-form{\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n  }\\r\\n  .keep-user-register-wrapper{\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: end;\\r\\n            justify-content: flex-end;\\r\\n  } \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLDRCQUFzQjtJQUF0Qiw2QkFBc0I7WUFBdEIsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxvQkFBYTtJQUFiLGFBQWE7SUFDYixxQkFBeUI7WUFBekIseUJBQXlCO0VBQzNCIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5rZWVwLXVzZXItcmVnaXN0ZXItZm9ybXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxuICAua2VlcC11c2VyLXJlZ2lzdGVyLXdyYXBwZXJ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICB9ICJdfQ== */\"","module.exports = \"<!-- Label to display any error messages -->\\r\\n<label class=\\\"error-message\\\">{{ errMessage }}</label>\\r\\n\\r\\n<div class=\\\"keep-user-register-form\\\">\\r\\n<mat-form-field> \\r\\n  <input [(ngModel)]=\\\"userprofile.userid\\\" name=\\\"editUserId\\\" matInput placeholder=\\\"User Id\\\" type=\\\"text\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  <input [(ngModel)]=\\\"userprofile.password\\\" name=\\\"editPassword\\\" matInput placeholder=\\\"Password\\\"  type=\\\"text\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field> \\r\\n  <input [(ngModel)]=\\\"userprofile.firstname\\\" name=\\\"editFirstName\\\" matInput placeholder=\\\"First Name\\\" type=\\\"text\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  <input [(ngModel)]=\\\"userprofile.lastname\\\" name=\\\"editLastName\\\" matInput placeholder=\\\"Last name\\\"  type=\\\"text\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  <input [(ngModel)]=\\\"userprofile.role\\\" name=\\\"editRole\\\" matInput placeholder=\\\"Role\\\"  type=\\\"text\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  <input [(ngModel)]=\\\"userprofile.contact\\\" name=\\\"editContact\\\" matInput placeholder=\\\"Contact\\\"  type=\\\"text\\\">\\r\\n</mat-form-field>\\r\\n</div>\\r\\n<div class=\\\"keep-user-register-wrapper\\\">\\r\\n  <button mat-button (click)=\\\"onSave()\\\">Save</button>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs'; \r\nimport {User} from '../user'\r\nimport { UserprofileService } from '../services/userprofile.service';\r\nimport {AuthenticationService} from '../services/authentication.service'\r\nimport {RouterService} from '../services/router.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  userprofile: User = new User('','');\r\n  userid: string;\r\n  errMessage: string;\r\n  registerUser:string;\r\n  constructor( private userService: UserprofileService\r\n  , private _authService: AuthenticationService\r\n  , private routerService: RouterService) {\r\n    //this.userid=this.data.userid;\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.userid=this.data.userid;\r\n  }\r\n  onSave() {\r\n    this.userprofile.fullName();\r\n    this._authService.registerUser(this.userprofile)\r\n    .then(\r\n      res => { \r\n        if(res){\r\n          this.performLogin();\r\n      } \r\n    }\r\n    )\r\n    .catch(this.handleError());;\r\n  }\r\n  performLogin() {\r\n    this._authService.authenticateUser(this.userprofile)\r\n    .then(\r\n      res => {\r\n        if(res){\r\n          this.AddUserDetails();\r\n        }\r\n        else{\r\n          this.errMessage = \"No token found\"\r\n        }\r\n    }\r\n    )\r\n    .catch(this.handleError());;\r\n  }\r\n  AddUserDetails(){\r\n    this.userService.addUser(this.userprofile).subscribe(editUser => {\r\n      //this.dialogRef.close();\r\n      },\r\n      error => {\r\n        if (404 === error.status) {\r\n          this.errMessage =  error.message;\r\n       }else {\r\n        this.errMessage = error.message;\r\n      }\r\n      });\r\n  }\r\n  private handleError () {\r\n    return (error: any): any => {\r\n      if ((error.status === 404 || error.status === 403)) {\r\n        console.error(error);\r\n        this.log(`Failed: Server Error`);\r\n      }\r\n      return Observable.throw(error);\r\n\r\n    };\r\n  }\r\n  private log(message: string) {\r\n    console.log(`NotesService: ${message}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\r\n\r\nimport { MessageService } from './message.service';\r\n\r\nexport interface RequestCacheEntry {\r\n  url: string;\r\n  response: HttpResponse<any>;\r\n  lastRead: number;\r\n}\r\n\r\nexport abstract class RequestCache {\r\n  abstract get(req: HttpRequest<any>): HttpResponse<any> | undefined;\r\n  abstract put(req: HttpRequest<any>, response: HttpResponse<any>): void\r\n}\r\n\r\nconst maxAge = 30000; // maximum cache age (ms)\r\n\r\n@Injectable()\r\nexport class RequestCacheWithMap implements RequestCache {\r\n\r\n  cache = new Map<string, RequestCacheEntry>();\r\n\r\n  constructor(private messenger: MessageService) { }\r\n\r\n  get(req: HttpRequest<any>): HttpResponse<any> | undefined {\r\n    const url = req.urlWithParams;\r\n    const cached = this.cache.get(url);\r\n\r\n    if (!cached) {\r\n      return undefined;\r\n    }\r\n\r\n    const isExpired = cached.lastRead < (Date.now() - maxAge);\r\n    const expired = isExpired ? 'expired ' : '';\r\n    this.messenger.add(\r\n      `Found ${expired}cached response for \"${url}\".`);\r\n    return isExpired ? undefined : cached.response;\r\n  }\r\n\r\n  put(req: HttpRequest<any>, response: HttpResponse<any>): void {\r\n    const url = req.urlWithParams;\r\n    this.messenger.add(`Caching response from \"${url}\".`);\r\n\r\n    const entry = { url, response, lastRead: Date.now() };\r\n    this.cache.set(url, entry);\r\n\r\n    // remove expired cache entries\r\n    const expired = Date.now() - maxAge;\r\n    this.cache.forEach(entry => {\r\n      if (entry.lastRead < expired) {\r\n        this.cache.delete(entry.url);\r\n      }\r\n    });\r\n\r\n    this.messenger.add(`Request cache size: ${this.cache.size}.`);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { catchError, map, retry } from 'rxjs/operators';\r\nimport * as jwd_decode from 'jwt-decode';\r\nimport { User } from '../user';\r\nimport { resolve } from 'url';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport const TOKEN_NAME: string = 'JWT_TOKEN'\r\nexport const USER_ID: string = 'USER_ID'\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private headers = new HttpHeaders({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n  private serviceUrl = environment.authservice;//'http://localhost:8081/auth/';\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n  // private _userLoggedinSource = new BehaviorSubject<string>(\"\");\r\n  // _userLoggedinStatus$ = this._userLoggedinSource.asObservable();\r\n\r\n  private loggedIn = false;\r\n  constructor(private http: HttpClient) {\r\n    this.loggedIn = !!this.getBearerToken();\r\n    this._authNavStatusSource.next(this.loggedIn);\r\n  }\r\n\r\n  setBearerToken(token) {\r\n    localStorage.setItem(TOKEN_NAME, token);\r\n  }\r\n\r\n  getBearerToken() {\r\n    return localStorage.getItem(TOKEN_NAME);\r\n  }\r\n  setUserId(userId) {\r\n    localStorage.setItem(USER_ID, userId);\r\n  }\r\n\r\n  getUserId() {\r\n    return localStorage.getItem(USER_ID);\r\n  }\r\n\r\n  deleteToken(): void {\r\n    localStorage.removeItem(TOKEN_NAME);\r\n  }\r\n\r\n  getTokenExpirationDate(token: string): Date {\r\n    const decoded = jwd_decode(token);\r\n    if (decoded.exp === undefined) return null;\r\n    const date = new Date(0);\r\n    date.setUTCSeconds(decoded.exp);\r\n    return date;\r\n  }\r\n\r\n  isTokenExpired(token?: string): boolean {\r\n    if (!token) token = this.getBearerToken();\r\n    if (!token) return true;\r\n    const date = this.getTokenExpirationDate(token);\r\n    if (date === undefined || date === null) return false;\r\n    return !(date.valueOf() > new Date().valueOf());\r\n  }\r\n\r\n\r\n  authenticateUser(data: User) {\r\n    const url = this.serviceUrl + 'login'\r\n    const json = JSON.stringify(data);\r\n    return this.http.post(url, json, { headers: this.headers })\r\n      .toPromise()\r\n      .then(res => {\r\n        this.setBearerToken(JSON.parse(res.toString()).token);\r\n        this.setUserId(data.userid);\r\n        //this._userLoggedinSource.next(data.userid);\r\n        this.loggedIn = true;\r\n        this._authNavStatusSource.next(true);\r\n        return true;\r\n      })\r\n      .catch(this.handleError());\r\n  }\r\n\r\n  registerUser(data: User) {\r\n    const url = this.serviceUrl + 'register'\r\n    const json = JSON.stringify(data);\r\n    return this.http.post(url, json, { headers: this.headers })\r\n      .toPromise()\r\n      .then(res => res)\r\n      .catch(this.handleError());\r\n  }\r\n\r\n  logout() {\r\n    this.deleteToken();\r\n    this.loggedIn = false;\r\n    this._authNavStatusSource.next(false);\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.loggedIn;\r\n  }\r\n  private handleError() {\r\n    return (error: any): any => {\r\n      if ((error.status === 404 || error.status === 403)) {\r\n        console.error(error);\r\n        this.log(`Failed: Server Error`);\r\n      }\r\n      return Observable.throw(error);\r\n\r\n    };\r\n  }\r\n  private log(message: string) {\r\n    console.log(`NotesService: ${message}`);\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Category } from '../category';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class CategoryService implements OnInit {\r\n  categories: Category[];// Array<Category>;\r\n  categoriesSubject: BehaviorSubject<Category[]>;//BehaviorSubject<Array<Category>>;\r\n  private serviceUrl = environment.cateservice;\r\n\r\n  constructor(private http: HttpClient, private auth_Service: AuthenticationService) {\r\n    this.categories = [];\r\n    this.categoriesSubject = new BehaviorSubject(this.categories);\r\n    this.fetchCategoriesFromServer();\r\n  }\r\n  ngOnInit() {\r\n    //this.subscription = this.auth_Service._userLoggedinStatus$.subscribe(user => this.user = user);\r\n    this.fetchCategoriesFromServer();\r\n  }\r\n  fetchCategoriesFromServer() {\r\n    if (this.auth_Service.getUserId() != null) {\r\n      const url = this.serviceUrl + 'user/' + this.auth_Service.getUserId();\r\n      return this.http.get<Category[]>(url)\r\n        .subscribe(categories => {\r\n          this.categories = categories;\r\n          this.categoriesSubject.next(this.categories);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  getCategories(): BehaviorSubject<Category[]> {\r\n    return this.categoriesSubject;\r\n  }\r\n\r\n  getCategoryById(CategoryId): Category {\r\n    const Category = this.categories.find(b_Category => b_Category.id === CategoryId);\r\n    return Object.assign({}, Category);\r\n  }\r\n\r\n  addCategory(Category: Category): Observable<Category> {\r\n    return this.http.post<Category>(this.serviceUrl, Category)\r\n      .pipe(tap(addedCategory => {\r\n        console.log('Added Note', addedCategory);\r\n        this.categories.push(addedCategory);\r\n        this.categoriesSubject.next(this.categories);\r\n      }), catchError(this.handleError<Category>(`Unable to add Category`)));\r\n  }\r\n\r\n  editCategory(category: Category): Observable<Category> {\r\n    return this.http.put<Category>(this.serviceUrl + `${category.id}`, category)\r\n      .pipe(tap(editedCategory => {\r\n        const Category1 = this.categories.find(a_category => a_category.id === editedCategory.id);\r\n        Object.assign(Category1, editedCategory);\r\n        this.categoriesSubject.next(this.categories);\r\n      }), catchError(this.handleError<Category>(`Unable to edit Category`)));\r\n  }\r\n\r\n  deleteCategory(CategoryId) {\r\n    return this.http.delete<Boolean>(this.serviceUrl + '/' + CategoryId)\r\n      .toPromise()\r\n      .then(res => res)\r\n      .catch(this.handleError<Boolean>(`Unable to delete Category`));\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      this.log(`${operation} failed: ${error.message}`);\r\n      return Observable.throw(error);\r\n    };\r\n  }\r\n  private log(message: string) {\r\n    console.log(`Category Service: ${message}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Moment } from '../moment';\r\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\r\n\r\n\r\nexport const searchUrl = 'https://images-api.nasa.gov/search';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'x-refresh': 'true'\r\n  })\r\n};\r\n\r\nfunction createHttpOptions(searchName: string, refresh = false) {\r\n  // nasa images search api\r\n  // e.g., https://images-api.nasa.gov/search?q=apollo'\r\n  const params = new HttpParams({ fromObject: { q: searchName } });\r\n  const headerMap = refresh ? { 'x-refresh': 'true' } : {};\r\n  const headers = new HttpHeaders(headerMap);\r\n  return { headers, params };\r\n}\r\n\r\n@Injectable()\r\nexport class MomentSearchService {\r\n  private handleError: HandleError;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    httpErrorHandler: HttpErrorHandler) {\r\n    this.handleError = httpErrorHandler.createHandleError('MomentsService');\r\n  }\r\n\r\n  search(searchName: string, refresh = false): Observable<Moment[]> {\r\n    // clear if no search name\r\n    if (!searchName.trim()) { return of([]); }\r\n\r\n    const options = createHttpOptions(searchName, refresh);\r\n\r\n    // TODO: Add error handling\r\n    return this.http.get(searchUrl, options).pipe(\r\n      map((data: any) => {\r\n        return data.collection.items.map((entry: any) => ({\r\n          nasaId: entry.data[0].nasa_id,\r\n          title: entry.data[0].title,\r\n          description: entry.data[0].description,\r\n          href: entry.links ? entry.links[0].href : ''\r\n        } as Moment)\r\n        );\r\n      }),\r\n      catchError(this.handleError('search', []))\r\n    );\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Moment } from '../moment';\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\nimport { environment } from '../../environments/environment';\nimport { AuthenticationService } from './authentication.service';\n\n\n@Injectable()\nexport class NasaService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n  serviceUrl = environment.momentsservice;  // URL to web api\n  private handleError: HandleError;\n  moments: Array<Moment>;\n  momentsSubject: BehaviorSubject<Array<Moment>>;\n\n  constructor(\n    private http: HttpClient,\n    httpErrorHandler: HttpErrorHandler,\n    private auth_Service: AuthenticationService) {\n    this.handleError = httpErrorHandler.createHandleError('momentsService');\n    this.moments = [];\n    this.momentsSubject = new BehaviorSubject(this.moments);\n    this.fetchMomentsFromServer();\n  }\n  ngOnInit() {\n    this.fetchMomentsFromServer();\n  }\n  fetchMomentsFromServer() {\n    return this.http.get<Array<Moment>>(this.serviceUrl + this.auth_Service.getUserId(), this.httpOptions)\n      .subscribe(moments => {\n        this.moments = moments;\n        this.momentsSubject.next(this.moments);\n      });\n  }\n\n  getMoments(): BehaviorSubject<Array<Moment>> {\n    return this.momentsSubject;\n  }\n\n  addMoment(moment: Moment): Observable<Moment> {\n    return this.http.post<Moment>(this.serviceUrl + this.auth_Service.getUserId(), moment, this.httpOptions)\n      .pipe(tap(addedMoment => {\n        console.log('Added Moment', addedMoment);\n        this.fetchMomentsFromServer();\n        //this.moments.push(addedMoment);\n        //this.momentsSubject.next(this.moments);\n      }), catchError(\n        this.handleError<Moment>(`Unable to add Moments`))\n      );\n  }\n\n  editMoment(moment: Moment): Observable<Moment> {\n    return this.http.put<Moment>(this.serviceUrl + this.auth_Service.getUserId() + `/${moment.id}`, moment, this.httpOptions)\n      .pipe(tap(editedMoment => {\n        this.fetchMomentsFromServer();\n        // const moment1 = this.moments.find(a_moment => a_moment.id === editedMoment.id);\n        // Object.assign(moment1, editedMoment);\n        // this.momentsSubject.next(this.moments);\n      }), catchError(this.handleError<Moment>(`Unable to edit Moments`)));\n  }\n\n  getMomentById(momentId): Moment {\n    const moment = this.moments.find(b_moment => b_moment.id === momentId);\n    return Object.assign({}, moment);\n  }\n\n  getMomentByCateogoryId(categoryId): Moment {\n    const moment = this.moments.find(b_moment => b_moment.category.id === categoryId);\n    return Object.assign({}, moment);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class RouterService {\r\n\r\n  constructor(public router: Router, private location: Location) { }\r\n\r\n  routeToDashboard() {\r\n    this.router.navigate(['moments']);\r\n  }\r\n\r\n  routeToLogin() {\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  routeToEditNoteView(noteId) {\r\n    this.router.navigate(\r\n      [\r\n        'dashboard',\r\n        {\r\n          outlets: {\r\n            noteEditOutlet: ['note', noteId, 'edit']\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  }\r\n\r\n  routeBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  routeToNoteView() {\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n  routeToCategoryListView(categoryId) {\r\n    this.router.navigate([\"category/\" + categoryId])\r\n  }\r\n\r\n\r\n  routeToRegisterView(userId) {\r\n    this.router.navigate([\r\n      'login',\r\n      {\r\n        outlets: {\r\n          userEditOutlet: ['user', userId, 'edit']\r\n        }\r\n      }\r\n    ]);\r\n  }\r\n\r\n  routeToCategoryView(categoryId) {\r\n    this.router.navigate(['category',\r\n      {\r\n        outlets: {\r\n          categoryEditOutlet: ['category', categoryId]\r\n        }\r\n      }]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../user';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable()\r\nexport class UserprofileService {\r\n\r\n  users: Array<User>;\r\n  usersSubject: BehaviorSubject<Array<User>>;\r\n  private serviceUrl = environment.userervice;//'http://localhost:8121/api/user/';\r\n\r\n  constructor(private http: HttpClient, private auth_Service: AuthenticationService) {\r\n    this.users = [];\r\n    this.usersSubject = new BehaviorSubject(this.users);\r\n  }\r\n  fetchUsersFromServer() {\r\n    return this.http.get<Array<User>>(this.serviceUrl)\r\n      .subscribe(users => {\r\n      this.users = users;\r\n        this.usersSubject.next(this.users);\r\n      });\r\n  }\r\n\r\n  getUser(): BehaviorSubject<Array<User>> {\r\n    return this.usersSubject;\r\n  }\r\n\r\n  addUser(user: User): Observable<User> {\r\n    return this.http.post<User>(this.serviceUrl, user)\r\n      .pipe(tap(addedUser => {\r\n        console.log('Added User', addedUser);\r\n        this.users.push(addedUser);\r\n        this.usersSubject.next(this.users);\r\n      }), catchError(this.handleError<User>(`Unable to add Users`)));\r\n  }\r\n\r\n  editNote(user: User): Observable<User> {\r\n    return this.http.put<User>(this.serviceUrl + `/${user.userid}`, user)\r\n      .pipe(tap(editedUser => {\r\n        const user1 = this.users.find(a_user => a_user.userid === editedUser.userid);\r\n        Object.assign(user1, editedUser);\r\n        this.usersSubject.next(this.users);\r\n      }), catchError(this.handleError<User>(`Unable to edit Users`)));\r\n  }\r\n\r\n  getUserById(userId): User {\r\n    const user = this.users.find(b_user => b_user.userid === userId);\r\n    return Object.assign({}, user);\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      this.log(`${operation} failed: ${error.message}`);\r\n      return Observable.throw(error);\r\n    };\r\n  }\r\n  private log(message: string) {\r\n    console.log(`UserService: ${message}`);\r\n  }\r\n\r\n}\r\n","export class User {\r\n    userid: string;\r\n    password: string;\r\n    name:string;\r\n    firstname: string;\r\n    lastname: string;\r\n    role: string;\r\n    contact:string;\r\n    AddedDate:Date;\r\n\r\n    constructor(user:string,pass:string) {\r\n        this.userid=user;\r\n        this.password=pass;\r\n        this.name='';\r\n        this.firstname = '';\r\n        this.lastname = '';\r\n        this.role = '';\r\n        this.contact = '';\r\n        this.AddedDate= new Date();\r\n    }\r\n\r\n    fullName(){\r\n        this.name = this.firstname + this.lastname;\r\n    }\r\n  }\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  authservice: \"http://localhost:8081/auth/\",\r\n  cateservice: \"http://localhost:8091/api/category/\",\r\n  momentsservice: \"http://localhost:8131/api/moments/\",\r\n  userervice: \"http://localhost:8121/api/user/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import 'hammerjs';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/"],"sourceRoot":""}