version: '3'

services:
    web0:
        image: momentsui
        container_name: momentsui01
        build:
          context: ./moments.ui
          dockerfile: Dockerfile.local
        ports:
            - "4200:80"
        environment: 
            - ASPNETCORE_ENVIRONMENT=Docker
        volumes:
            - ./vsdbg:/remote_debugger/vsdbg
        restart: on-failure
        depends_on: 
            - web1
            - web2
            - web3
            - web4
            - web5
            - web6
    web1:
        image: momentsauthservice
        container_name: momentsauthservice01
        build:
          context: ./moments.api/moments.auth/moments.auth.api
          dockerfile: Dockerfile.local.Debug
        ports:
            - "8081:80"
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - MomentDB=server=mssql;database=MomentsDB;User Id=sa;Password=1Secure*Password1;
            - PORT=80
        volumes:
            - ./vsdbg:/vsdbg
            - ./moments.api/moments.auth/moments.auth.api:/src
        restart: on-failure
        depends_on: 
            - mssql
    web6:
        image: momentsauthopservice
        container_name: momentsauthopservice01
        build:
            context: ./moments.api/moments.auth.op/moments.auth.op.api
            dockerfile: Dockerfile.local
        ports:
            - "8151:80"
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - MomentDB=Server=db1; Database=momentsdb; Uid=test; Pwd=my-secret-pw;
            - PORT=80
        volumes:
            - ./vsdbg:/remote_debugger/vsdbg
        restart: on-failure
        depends_on: 
            - db1
    web2:
        image: categoryservice
        container_name: categoryservice01
        build:
          context: ./moments.api/moments.category/moments.category.api
          dockerfile: Dockerfile.local
        ports:
            - "8091:80"
        volumes:
            - ./vsdbg:/remote_debugger/vsdbg
        restart: on-failure
        depends_on: 
            - db
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - Mongo_DB=mongodb://db:27017
            - PORT=80
    web3:
        image: momentsservice
        container_name: momentsservice01
        build:
          context: ./moments.api/moments.space/moments.space.api
          dockerfile: Dockerfile.local
        ports:
            - "8131:80"
        volumes:
            - ./vsdbg:/remote_debugger/vsdbg
        restart: on-failure
        depends_on: 
            - db
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - Mongo_DB=mongodb://db:27017
            - PORT=80
    web4:
        image: userservice
        container_name: userservice01
        build:
          context: ./moments.api/moments.user/moments.user.api
          dockerfile: Dockerfile.local
        ports:
            - "8121:80"
        volumes:
            - ./vsdbg:/remote_debugger/vsdbg
        restart: on-failure
        depends_on: 
            - db
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - Mongo_DB=mongodb://db:27017
            - PORT=80
    web5:
        image: momentsgateway
        container_name: momentsmomentsgateway01
        build:
            context: ./moments.api/moments.gateway
            dockerfile: Dockerfile.local
        ports:
            - "8141:80"
        volumes:
            - ./vsdbg:/remote_debugger/vsdbg
        environment:
            - PORT=80
        restart: on-failure
    db1:
        image: "mysql"
        ports:
            - "3306:3306"
        volumes:
            - ./dbvol:/var/lib/mysql
        environment: 
            - MYSQL_RANDOM_ROOT_PASSWORD=Yes
            - MYSQL_DATABASE=momentsdb
            - MYSQL_USER=test
            - MYSQL_PASSWORD=my-secret-pw
    db:
        image: "mongo"
        ports:
            - "27017:27017"
        volumes:
            - ./mg/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
            - rajmongodata:/data/db
    mssql:
        image: "mcr.microsoft.com/mssql/server:2017-latest"
        ports:
            - "1433:1433"
        volumes:
            - ./sqlvolume/data:/var/opt/mssql/data
            - ./sqlvolume/log:/var/opt/mssql/log
            - ./sqlvolume/backup:/var/opt/mssql/backup
        environment:
            ACCEPT_EULA: Y
            SA_PASSWORD: 1Secure*Password1
volumes:
    rajmongodata: